@model IEnumerable<FinalTask.Models.Entity.Students>
@{
    ViewData["Title"] = "Запросы";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h2>Запрос 1</h2>

<div class="row">
    <div class="col-md-12 ">
        <h5 class="m-3 text-center">
            Выбирает из таблицы АБИТУРИЕНТЫ информацию об абитуриентах, фамилия которых начинается с заданной буквы
        </h5>
        <div class="col-md-8">
            <form asp-action="QueryJson_1"
                  data-ajax-method="POST"
                  data-ajax-success="parseResponse"
                  data-ajax="true">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group row">
                    <div class="col-md-5">
                        <label class="col-form-label" for="letter">Фамилия абитуриента</label>
                    </div>
                    <div class="col-md-7">
                        <input type="text" class="form-control"
                               name="letter" id="letter"
                               maxlength="1"
                               required="required" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-4">
                        <input type="submit" value="Найти" class="btn btn-block btn-primary" />
                    </div>
                    <div class="col-md-4"></div>
                    <div class="col-md-4">
                        <a class="btn btn-block btn-primary" asp-area="" asp-controller="DbRequests" asp-action="QueryJson_1"
                           data-ajax-success="parseResponse" data-ajax="true" >Все абитуриенты</a>
                    </div>
                </div>
            </form>
        </div>
        <table class="table table-hover table-striped table-sm table-responsive-md">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.SurName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Patronymic)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Year)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Passport)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Photo)
                    </th>
                </tr>
            </thead>
            <tbody id="tabledata">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SurName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Patronymic)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Year)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Passport)
                        </td>
                        <td>
                            <img src="~/img/students/@item.Photo" width="100" height="100" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts
{
    @*Ненавязивый JavaScript для выполнения запроса на сервер без полного обновления страницы*@
    <script src="~/lib/jquery-validation-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>

    <script>
        // функция обратного вызова, обработчик успешного завершения AJAX-запроса
        function parseResponse(temp) {
            //записываем данные в таблицу
            var target = $("#tabledata");
            target.empty(); // почистить таблицу
            //данные
            for (var i = 0; i < temp.length; i++) {
                target.append("<tr><td>" +
                    temp[i].surName +
                    "</td><td>" +
                    temp[i].name +
                    "</td><td>" +
                    temp[i].patronymic +
                    "</td><td>" +
                    temp[i].address +
                    "</td><td>" +
                    temp[i].year +
                    "</td><td>" +
                    temp[i].passport +
                    "</td><td>" +
                    `<img src="/img/students/${temp[i].photo}" width="100" height="100" /></td></tr>`);
            }

        } //parseResponse

    </script>
}